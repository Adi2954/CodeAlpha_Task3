# -*- coding: utf-8 -*-
"""codealpha_finaltask.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WPuNmSjAxy0eVkdEetoyZsi426XcCd_l
"""

import pandas as pd

# Load the CSV file
file_path = '/content/marketing_campaign.csv'
df = pd.read_csv(file_path)

# Display the first few rows of the dataset
df.head()

# Reload the file using the correct delimiter
df = pd.read_csv(file_path, delimiter=';')

# Display the first few rows of the dataset
df.head()

# Split into control (Group A) and test (Group B) based on 'Response'
control_group = df[df['Response'] == 0]
test_group = df[df['Response'] == 1]

# Check the sizes of the two groups
len(control_group), len(test_group)

from scipy import stats

# Perform a t-test on Income between the two groups
control_income = control_group['Income'].dropna()
test_income = test_group['Income'].dropna()

t_stat, p_value = stats.ttest_ind(control_income, test_income, equal_var=False)

t_stat, p_value

# Interpretation of the p-value
if p_value < 0.05:
    print("There is a statistically significant difference between the control and test groups.")
else:
    print("There is no statistically significant difference between the control and test groups.")

import matplotlib.pyplot as plt
import seaborn as sns

# Plotting histograms of Income for Control and Test groups
plt.figure(figsize=(10, 6))
sns.histplot(control_income, label='Control Group (Response = 0)', color='blue', kde=True, stat='density')
sns.histplot(test_income, label='Test Group (Response = 1)', color='green', kde=True, stat='density')

plt.title('Income Distribution for Control and Test Groups')
plt.xlabel('Income')
plt.ylabel('Density')
plt.legend()
plt.show()

# Create a contingency table
contingency_table = pd.crosstab(df['Response'], df['Marital_Status'])

# Perform the Chi-Squared test
chi2_stat, p_val, dof, expected = stats.chi2_contingency(contingency_table)

chi2_stat, p_val

import numpy as np

# Calculate the confidence interval for the difference in means
mean_diff = np.mean(test_income) - np.mean(control_income)

# Standard error of the difference
se_diff = np.sqrt(np.var(control_income)/len(control_income) + np.var(test_income)/len(test_income))

# 95% Confidence Interval
ci_low = mean_diff - 1.96 * se_diff
ci_high = mean_diff + 1.96 * se_diff

ci_low, ci_high

# Plotting boxplots of Income for Control and Test groups
plt.figure(figsize=(8, 6))
sns.boxplot(x='Response', y='Income', data=df)
plt.title('Boxplot of Income for Control and Test Groups')
plt.xlabel('Response (0 = Control, 1 = Test)')
plt.ylabel('Income')
plt.show()

# Create a contingency table for the Response and Marital_Status columns
contingency_table = pd.crosstab(df['Response'], df['Marital_Status'])

# Perform the Chi-Squared test
chi2_stat, p_val, dof, expected = stats.chi2_contingency(contingency_table)

print(f"Chi-Squared Statistic: {chi2_stat}")
print(f"P-value: {p_val}")

import numpy as np

# Calculate the mean difference between the groups
mean_diff = np.mean(test_income) - np.mean(control_income)

# Calculate the standard error of the difference
se_diff = np.sqrt(np.var(control_income)/len(control_income) + np.var(test_income)/len(test_income))

# 95% Confidence Interval
ci_low = mean_diff - 1.96 * se_diff
ci_high = mean_diff + 1.96 * se_diff

print(f"95% Confidence Interval: ({ci_low}, {ci_high})")

# Calculate the pooled standard deviation
pooled_std = np.sqrt(((len(control_income) - 1) * np.var(control_income) +
                      (len(test_income) - 1) * np.var(test_income)) /
                     (len(control_income) + len(test_income) - 2))

# Calculate Cohen's D
cohens_d = mean_diff / pooled_std

print(f"Cohen's D: {cohens_d}")

# Plotting boxplots of Income for Control and Test groups
plt.figure(figsize=(8, 6))
sns.boxplot(x='Response', y='Income', data=df)
plt.title('Boxplot of Income for Control and Test Groups')
plt.xlabel('Response (0 = Control, 1 = Test)')
plt.ylabel('Income')
plt.show()

